#include <iostream>
#include <unordered_set>
#include <vector>
using namespace std;

bool containsDuplicateWithinWindow(const vector<int>& nums, int k) {
    unordered_set<int> window;
    for (int i = 0; i < nums.size(); ++i) {
        if (window.count(nums[i]) > 0) {
            return true;
        }
        window.insert(nums[i]);
        if (i >= k) {
            window.erase(nums[i - k]);
        }
    }
    return false;
}

int main() {
    int T;
    cin >> T;

    while (T--) {
        int n, k;
        cin >> n >> k;

        vector<int> nums(n);
        for (int i = 0; i < n; ++i) {
            cin >> nums[i];
        }

        if (containsDuplicateWithinWindow(nums, k)) {
            cout << "Yes, array contains duplicate within a window of size " << k << "." << endl;
        } else {
            cout << "No, array does not contain duplicate within a window of size " << k << "." << endl;
        }
    }

    return 0;
}
