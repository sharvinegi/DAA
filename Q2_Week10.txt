#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Task {
    int time;
    int deadline;
    int index;
};

bool compareTasks(const Task& a, const Task& b) {
    return a.deadline < b.deadline;
}

int main() {
    int n;
    cin >> n;
    
    vector<int> times(n);
    vector<int> deadlines(n);
    
    for (int i = 0; i < n; ++i) {
        cin >> times[i];
    }
    
    for (int i = 0; i < n; ++i) {
        cin >> deadlines[i];
    }
    
    vector<Task> tasks(n);
    for (int i = 0; i < n; ++i) {
        tasks[i] = {times[i], deadlines[i], i + 1};
    }
    
    sort(tasks.begin(), tasks.end(), compareTasks);
    
    vector<int> selectedTasks;
    int currentTime = 0;
    
    for (const Task& task : tasks) {
        if (currentTime + task.time <= task.deadline) {
            selectedTasks.push_back(task.index);
            currentTime += task.time;
        }
    }
    
    cout << "Max number of tasks = " << selectedTasks.size() << endl;
    cout << "Selected task numbers: ";
    for (size_t i = 0; i < selectedTasks.size(); ++i) {
        if (i > 0) cout << ", ";
        cout << selectedTasks[i];
    }
    cout << endl;
    
    return 0;
}
