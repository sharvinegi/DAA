#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int findMajorityElement(const vector<int>& nums) {
    int candidate = -1;
    int count = 0;
    for (int num : nums) {
        if (count == 0) {
            candidate = num;
            count = 1;
        } else if (num == candidate) {
            count++;
        } else {
            count--;
        }
    }
    count = 0;
    for (int num : nums) {
        if (num == candidate) {
            count++;
        }
    }
    if (count > nums.size() / 2) {
        return candidate;
    } else {
        return -1;
    }
}

double findMedian(vector<int>& nums) {
    sort(nums.begin(), nums.end());
    int n = nums.size();
    if (n % 2 == 0) {
        return (nums[n / 2 - 1] + nums[n / 2]) / 2.0;
    } else {
        return nums[n / 2];
    }
}

int main() {
    int n;
    cin >> n;
    
    vector<int> nums(n);
    for (int i = 0; i < n; ++i) {
        cin >> nums[i];
    }
    
    int majorityElement = findMajorityElement(nums);
    if (majorityElement != -1) {
        cout << "yes" << endl;
    } else {
        cout << "no" << endl;
    }
    
    double median = findMedian(nums);
    cout << median << endl;
    
    return 0;
}
