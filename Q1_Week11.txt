#include <iostream>
#include <vector>
#include <climits>

using namespace std;

int matrixChainOrder(const vector<int>& p, int n) {
    vector<vector<int>> m(n, vector<int>(n, 0));

    for (int L = 2; L < n; ++L) {
        for (int i = 1; i < n - L + 1; ++i) {
            int j = i + L - 1;
            m[i][j] = INT_MAX;
            for (int k = i; k <= j - 1; ++k) {
                int q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];
                if (q < m[i][j])
                    m[i][j] = q;
            }
        }
    }
    return m[1][n - 1];
}

int main() {
    int n;
    cin >> n;
    vector<int> p(n + 1);

    for (int i = 0; i < n; ++i) {
        int r, c;
        cin >> r >> c;
        if (i == 0) {
            p[i] = r;
        }
        p[i + 1] = c;
    }

    cout << matrixChainOrder(p, n + 1) << endl;

    return 0;
}
