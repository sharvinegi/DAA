#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;

void findPairs(const vector<int>& nums) {
    unordered_map<int, pair<int, int>> productMap;
    int n = nums.size();

    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            int product = nums[i] * nums[j];
            if (productMap.find(product) == productMap.end()) {
                productMap[product] = make_pair(nums[i], nums[j]);
            } else {
                pair<int, int> firstPair = productMap[product];
                cout << "(" << firstPair.first << ", " << firstPair.second << ")" << endl;
                cout << "(" << nums[i] << ", " << nums[j] << ")" << endl;
                return;
            }
        }
    }

    cout << "No such pairs found." << endl;
}

int main() {
    int n;
    cin >> n;

    vector<int> nums(n);
    for (int i = 0; i < n; ++i) {
        cin >> nums[i];
    }

    findPairs(nums);

    return 0;
}
â€ƒ
